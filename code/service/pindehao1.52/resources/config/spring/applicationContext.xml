<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:task="http://www.springframework.org/schema/task" 
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd 
           http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
           http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
           http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.0.xsd">

	<!-- Properties文件读取配置，base的properties -->
	<context:property-placeholder location="classpath:jdbc.properties" />
	<!-- JNDI获取数据源(使用c3p0连接池) -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
		destroy-method="close">
		<property name="driverClass" value="${jdbc.driverClassName}" />
		<property name="jdbcUrl" value="${jdbc.url}" />
		<property name="user" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<property name="autoCommitOnClose" value="true" />
		<property name="checkoutTimeout" value="${cpool.checkoutTimeout}" />
		<property name="initialPoolSize" value="${cpool.minPoolSize}" />
		<property name="minPoolSize" value="${cpool.minPoolSize}" />
		<property name="maxPoolSize" value="${cpool.maxPoolSize}" />
		<property name="maxIdleTime" value="${cpool.maxIdleTime}" />
		<property name="acquireIncrement" value="${cpool.acquireIncrement}" />
		<property name="maxIdleTimeExcessConnections" value="${cpool.maxIdleTimeExcessConnections}" />
	</bean>

	<!-- (事务管理)transaction manager, use JtaTransactionManager for global tx -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!-- (Annotation方式配置services)enable component scanning (beware that this 
		does not enable mapper scanning!) -->
	<!--<context:component-scan base-package="com.businesshelper.web.dao.impl" 
		/> -->

	<!--<context:component-scan base-package="com.businesshelper.web.action.login" 
		/> -->

	<!-- enable autowire -->
	<context:annotation-config />

	<!-- enable transaction demarcation with annotations -->
	<tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true" />
	
	<!-- define the SqlSessionFactory, notice that configLocation is not needed 
		when you use MapperFactoryBean -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:config/mybatis/mybatis-config.xml" />
	</bean>

	<!-- scan for mappers and let them be autowired -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<!-- Mapper接口所在包名，Spring会自动查找其下的Mapper -->
		<property name="basePackage" value="com.tzmb2c.web.mapper" />
	</bean>

	<bean id="sysBeanFactory"
			class="maowu.framework.utils.web.spring.SysBeanFactory"></bean>
	<!-- 			
	<bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig">  
        <property name="maxIdle" value="${redis.maxIdle}" />  
        <property name="maxTotal" value="${redis.maxActive}" />  
        <property name="maxWaitMillis" value="${redis.maxWait}" />  
        <property name="testOnBorrow" value="${redis.testOnBorrow}" />  
    </bean>  
    
    <bean id="connectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"  
        p:host-name="${redis.host}" p:port="${redis.port}" p:password="${redis.pass}" p:pool-config-ref="poolConfig"/>  
      
    <bean id="redisTemplate" class="org.springframework.data.redis.core.StringRedisTemplate">  
        <property name="connectionFactory" ref="connectionFactory" />  
    </bean>
    
	-->
	<!--cron表达式：*(秒0-59) *(分钟0-59) *(小时0-23) *(日期1-31) *(月份1-12或是JAN-DEC) *(星期1-7或是SUN-SAT) -->
	<!-- 拼团情况查询定时任务 --> 
	<bean id="GrouponTask" class="com.tzmb2c.utils.GrouponTask"></bean>
	<!-- 微信退款查询定时任务 --> 
	<bean id="WXRefundQueryTask" class="com.tzmb2c.utils.WXRefundQueryTask"></bean>
	<!-- 拼团返佣定时任务 --> 
	<bean id="UserDealLog" class="com.tzmb2c.utils.UserDealLog"></bean>
	<!-- 定时清除商品当日销售量 --> 
	<bean id="DaySellClean" class="com.tzmb2c.utils.DaySellClean"></bean>
	<!-- 自动拼团 --> 
	<bean id="autoGrouponTask" class="com.tzmb2c.utils.AutoGrouponTask"></bean>
	<!--拼得客排行榜定时任务  --> 
	<bean id="pindekeRankingTask" class="com.tzmb2c.utils.pindekeRankingTask"></bean>
	<!--拼得客注册30天销售额定时任务--> 
	<bean id="pindekeMonthSaleTask" class="com.tzmb2c.utils.pindekeMonthSaleTask"></bean>
	<!-- 自动确认收货 --> 
	<bean id="autoRecTask" class="com.tzmb2c.utils.autoRecTask"></bean>
	<!--
	<task:scheduled-tasks>
		<task:scheduled ref="GrouponTask" method="overdueGrouponJob" cron="0/1 * * * * ?"/>
		<task:scheduled ref="WXRefundQueryTask" method="query" cron="0 0 0/1 * * ?"/>
		<task:scheduled ref="UserDealLog" method="addUserDealLogTask" cron="0 0 0,12 * * ?"/>
		<task:scheduled ref="DaySellClean" method="daySellClean" cron="0 0 0 * * ?"/>
		<task:scheduled ref="autoGrouponTask" method="autoGroupon" cron="*/10 * * * * ?"/>
		<task:scheduled ref="autoRecTask" method="autoRecJob" cron="0/20 * * * * ?"/>
		<task:scheduled ref="pindekeRankingTask" method="pindekeRanking" cron="0 0 2 * * ?"/>
		<task:scheduled ref="pindekeMonthSaleTask" method="pindekeMonthSale" cron="0 0 3 * * ?"/>
	</task:scheduled-tasks>
	-->
	
</beans>