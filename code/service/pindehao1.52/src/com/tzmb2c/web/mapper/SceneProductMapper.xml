<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tzmb2c.web.mapper.SceneProductMapper">
	<!-- 查询所有的记录 -->
		<select id="findSceneProductList" resultType="SceneProductPojo" parameterType="java.util.Map">
		select
            s.id                 as id,
			s.scene_id           as sceneId,
			t.name               as sceneName,
			s.title              as title,
			s.introduction       as introduction,
			s.product_id         as productId,
			p.product_name       as productName,
			p.image              as image,
			p.distribution_price as distributionPrice,
			p.selling_price      as sellingPrice,
			<!-- a.product_id    as productId, -->
			a.sell_price         as sellPrice,
			a.active_price       as scenePrice,
			a.activity_num       as sceneNum,
			a.activity_stock     as sceneStock,
			a.sorting            as sorting,
			a.status             as status,
			(CASE WHEN a.status = 0 THEN '未通过' WHEN a.status = 1 THEN '已通过' END) as statusName,
			t.preview            as preview,
			(CASE WHEN t.preview = 0 THEN '无效预览' WHEN t.preview = 1 THEN '有效预览' END) as previewName,
			t.package_price      as packagePrice,
			t.p_sell_price       as psellPrice,
			t.type               as type,
			a.create_by          as createBy,
			a.create_date        as createDate,
			a.update_by          as updateBy,
			a.update_date        as updateDate,
			s.remarks            as remarks,
			s.version            as version,
			s.is_introduce       as isIntroduce,
			(CASE WHEN s.is_introduce = 0 THEN '否' WHEN s.is_introduce = 1 THEN '是' END) as isIntroduceName,
			s.preview            as previewPro,
			(CASE WHEN s.preview = 0 THEN '无效预览' WHEN s.preview = 1 THEN '有效预览' END) as previewProName,
			s.good_id            as goodId
	   	from scene_product s left join scene t on t.id=s.scene_id
	   	left join activity_goods a on a.id=s.good_id
	   	left join product p on p.id=s.product_id
		where 1=1
		<if test="sceneId != null">
			and s.scene_id =#{sceneId}
		</if>
		<if test="productId != null">
			and s.product_id =#{productId}
		</if>
		<if test="title != null and title != '' ">
			and s.title like CONCAT("%",#{title},"%")
		</if>
		<if test="sceneStock != null">
			and a.activity_stock = #{sceneStock}
		</if>
		<if test="sceneName != null and sceneName != '' ">
			and t.name like CONCAT("%",#{sceneName},"%")
		</if>
		<if test="productName != null and productName != '' ">
			and p.product_name like CONCAT("%",#{productName},"%")
		</if>
		<if test="status != null">
			and a.status = #{status}
		</if>
		<if test="isIntroduce != null">
			and s.is_introduce =#{isIntroduce}
		</if>
		order by a.sorting,a.create_date desc
		<if test="pageSize != null">
			limit #{pageNo} , #{pageSize}
		</if>
	</select>
	<!-- 查询记录的数目 -->	
	<select id="findSceneProductCount" resultType="int" parameterType="java.util.Map">
		select count(*)
	   	from scene_product s left join scene t on t.id=s.scene_id
	   	left join activity_goods a on a.id=s.good_id
	   	left join product p on p.id=s.product_id
		where 1=1
	    <if test="title != null and title != '' ">
			and s.title like CONCAT("%",#{title},"%")
		</if>
		<if test="sceneStock != null">
			and a.activity_stock = #{sceneStock}
		</if>
		<if test="sceneName != null and sceneName != '' ">
			and t.name like CONCAT("%",#{sceneName},"%")
		</if>
		<if test="productName != null and productName != '' ">
			and p.product_name like CONCAT("%",#{productName},"%")
	    </if>
	    <if test="sceneId != null ">
			and s.scene_id =#{sceneId}
		</if>
		<if test="status != null">
			and a.status = #{status}
		</if>
		<if test="isIntroduce != null">
			and s.is_introduce =#{isIntroduce}
		</if>
	</select>
	<!-- 查询单条 -->	
	<select id="findSceneProductById" resultType="SceneProductPojo" parameterType="Long">
		select
            s.id                 as id,
			s.scene_id           as sceneId,
			t.name               as sceneName,
			s.title              as title,
			s.introduction       as introduction,
			s.product_id         as productId,
			p.product_name       as productName,
			<!-- s.image         as image, -->
			p.image              as image,
			p.selling_price      as sellingPrice,
		    a.sell_price         as sellPrice, 
			p.distribution_price as distributionPrice,
			a.active_price       as scenePrice,
			a.activity_num       as sceneNum,
			a.activity_stock     as sceneStock,
			a.sorting            as sorting,
			a.status             as status,
			(CASE WHEN a.status = 0 THEN '未通过' WHEN a.status = 1 THEN '已通过' END) as statusName,
			a.create_by          as createBy,
			a.create_date        as createDate,
			a.update_by          as updateBy,
			a.update_date        as updateDate, 
			s.remarks            as remarks,
			s.version            as version,
			s.is_introduce       as isIntroduce,
			s.preview            as previewPro,
			s.good_id            as goodId
	   	from scene_product s left join scene t on t.id=s.scene_id
	   	left join product p on p.id=s.product_id
	   	left join activity_goods a on a.id=s.good_id
		where  s.id = #{id}
	</select>
	<!-- 插入单条 -->
	<insert id="insertSceneProduct" parameterType="SceneProductPojo">
		insert into scene_product 
		(scene_id,title,introduction,product_id,image,remarks,version,is_introduce,preview,good_id) 
		values (#{sceneId},#{title},#{introduction},#{productId},#{image},#{remarks},#{version},#{isIntroduce},#{previewPro},#{goodId})
	</insert>	
	<!-- 删除单条 -->
	<delete id="delSceneProductById" parameterType="Long">
		delete from scene_product where id = #{id}
	</delete>	
	<!-- 删除多条 -->
	<delete id="delSceneProductBySceneId" parameterType="Long">
		delete from scene_product where scene_id = #{sceneId}
	</delete>	
	<!-- 审核单条 -->
	<update id="checkSceneProductById" parameterType="Long">
		update scene_product s set  status = 1
		<!-- update_date = now() -->
		where
		s.id = #{id}
	</update>
	<!-- 取审单条 -->
	<update id="uncheckSceneProductById" parameterType="Long">
		update scene_product s set  status = 0
		<!-- update_date = now() -->
		where
		s.id = #{id}
	</update>
	<!--更新单条-->
	<update id="updateSceneProductById" parameterType="SceneProductPojo">
		update scene_product set
		<if test="sceneId != null">
			scene_id = #{sceneId},
		</if>
	    <!-- <if test="title != null and title != ''">
			title = #{title},
		</if> --> 
		<if test="introduction != null">
			introduction = #{introduction},
		</if>
		<if test="productId != null">
			product_id = #{productId},
		</if>
	    <if test="image != null">
			image = #{image},
		</if>
	    <if test="remarks != null">
			remarks = #{remarks},
		</if>
		<if test="version != null">
			version = #{version},
		</if>
		<if test="previewPro != null">
			preview = #{previewPro},
		</if>
		<if test="isIntroduce != null">
			is_introduce = #{isIntroduce},
		</if>
		title = #{title}
		where id = #{id}
	</update>	
</mapper>