<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.tzmb2c.web.mapper.OrderRefundMapper">
 
	<!-- <cache/>  -->

	<select id="getOrderRefundAll" resultType="orderRefundPojo">
		select t.id as id, t.user_id as userId, t.order_id as orderId, t.loginname as loginname, t.shop_id as shopId ,t.product_id as productId, t.product_name as productName,t.product_model as productModel,t.stock_id as stockId ,t.stock_price_old as stockPriceOld,
		t.stock_price as stockPrice,t.refund_num as refundNum,t.refund_reason as refundReason,t.status as status,t.sku_link_id as skuLinkId,t.coupon_price as couponPrice,t.phone as phone
		from user_order_refund t order by t.create_date desc
	</select>
	
	<select id="getfindByIdOrderRefund" parameterType="Long" resultType="orderRefundPojo" >
		select t.id as id, t.user_id as userId, t.order_id as orderId, t.loginname as loginname, t.shop_id as shopId ,t.product_id as productId, t.product_name as productName,t.product_model as productModel,t.stock_id as stockId ,t.stock_price_old as stockPriceOld,
		t.stock_price as stockPrice,t.refund_num as refundNum,t.refund_reason as refundReason,t.status as status,t.sku_link_id as skuLinkId,t.coupon_price as couponPrice,t.phone as phone
		from user_order_refund t where
		t.id = #{id} 
	</select>

	<!-- <insert id="insertOrderRefund" parameterType="orderRefundPojo">
		insert into
		user_order_refund(id,order_id,user_id,loginname,shop_id,product_id,product_name,product_model,stock_id,stock_price_old,stock_price,refund_num,refund_reason,status,refund_Type,images,logistics,logType,detail_id,type,create_date,sku_link_id,images2,images3,phone)
		values(#{id},#{orderId},#{userId},#{loginname},#{shopId},#{productId},#{productName},#{productModel},#{stockId},#{stockPriceOld},#{stockPrice},#{refundNum},#{refundReason},#{status},#{refundType},#{images},#{logistics},#{logType},#{detailId},#{type},sysdate(),#{skuLinkId},#{images2},#{images3},#{phone})
	</insert> -->
	
	<insert id="insertOrderRefund" useGeneratedKeys="true" keyProperty="id" parameterType="orderRefundPojo">
		insert into user_order_refund
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="orderId != null">
				order_id,
			</if>
			<if test="userId != null">
				user_id,
			</if>
			<if test="loginname != null">
				loginname,
			</if>
			<if test="shopId != null">
				shop_id,
			</if>
			<if test="productId != null">
				product_id,
			</if>
			<if test="productName != null">
				product_name,
			</if>
			<if test="productModel != null">
				product_model,
			</if>
			<if test="stockId != null">
				stock_id,
			</if>
			<if test="stockPriceOld != null">
				stock_price_old,
			</if>
			<if test="stockPrice != null">
				stock_price,
			</if>
			<if test="refundNum != null">
				refund_num,
			</if>
			<if test="refundReason != null">
				refund_reason,
			</if>
			<if test="status != null">
				status,
			</if>
			<if test="createBy != null">
				create_by,
			</if>
				create_date,
			<if test="updateBy != null">
				update_by,
			</if>
				update_date,
			<if test="remarks != null">
				remarks,
			</if>
			<if test="version != null">
				version,
			</if>
			<if test="images != null">
				images,
			</if>
			<if test="images2 != null">
				images2,
			</if>
			<if test="images3 != null">
				images3,
			</if>
			<if test="logistics != null">
				logistics,
			</if>
			<if test="logType != null">
				logType,
			</if>
			<if test="refundType != null">
				refund_Type,
			</if>
			<if test="address != null">
				address,
			</if>
			<if test="detailId != null">
				detail_id,
			</if>
			<if test="type != null">
				type,
			</if>
			<if test="skuLinkId != null">
				sku_link_id,
			</if>
			<if test="couponPrice != null">
				coupon_price,
			</if>
			<if test="refundMoney != null">
				refund_money,
			</if>
			<if test="serviceInvolved != null">
				service_involved,
			</if>
			<if test="rejectImages != null">
				reject_images,
			</if>
			<if test="rejectReason != null">
				reject_reason,
			</if>
			<if test="phone != null">
				phone,
			</if>
			<if test="isRefund != null">
				is_refund,
			</if>
			<if test="outRefundNo != null">
				out_refund_no,
			</if>
			<if test="refundDate != null">
				refund_date,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id},
			</if>
			<if test="orderId != null">
				#{orderId},
			</if>
			<if test="userId != null">
				#{userId},
			</if>
			<if test="loginname != null">
				#{loginname},
			</if>
			<if test="shopId != null">
				#{shopId},
			</if>
			<if test="productId != null">
				#{productId},
			</if>
			<if test="productName != null">
				#{productName},
			</if>
			<if test="productModel != null">
				#{productModel},
			</if>
			<if test="stockId != null">
				#{stockId},
			</if>
			<if test="stockPriceOld != null">
				#{stockPriceOld},
			</if>
			<if test="stockPrice != null">
				#{stockPrice},
			</if>
			<if test="refundNum != null">
				#{refundNum},
			</if>
			<if test="refundReason != null">
				#{refundReason},
			</if>
			<if test="status != null">
				#{status},
			</if>
			<if test="createBy != null">
				#{createBy},
			</if>
				sysdate(),
			<if test="updateBy != null">
				#{updateBy},
			</if>
				sysdate(),
			<if test="remarks != null">
				#{remarks},
			</if>
			<if test="version != null">
				#{version},
			</if>
			<if test="images != null">
				#{images},
			</if>
			<if test="images2 != null">
				#{images2},
			</if>
			<if test="images3 != null">
				#{images3},
			</if>
			<if test="logistics != null">
				#{logistics},
			</if>
			<if test="logType != null">
				#{logType},
			</if>
			<if test="refundType != null">
				#{refundType},
			</if>
			<if test="address != null">
				#{address},
			</if>
			<if test="detailId != null">
				#{detailId},
			</if>
			<if test="type != null">
				#{type},
			</if>
			<if test="skuLinkId != null">
				#{skuLinkId},
			</if>
			<if test="couponPrice != null">
				#{couponPrice},
			</if>
			<if test="refundMoney != null">
				#{refundMoney},
			</if>
			<if test="serviceInvolved != null">
				#{serviceInvolved},
			</if>
			<if test="rejectImages != null">
				#{rejectImages},
			</if>
			<if test="rejectReason != null">
				#{rejectReason},
			</if>
			<if test="phone != null">
				#{phone},
			</if>
			<if test="isRefund != null">
				#{isRefund},
			</if>
			<if test="outRefundNo != null">
				#{outRefundNo},
			</if>
			<if test="refundDate != null">
				#{refundDate},
			</if>
		</trim>
	</insert>
	
	<delete id="delOrderRefund" parameterType="Long">
		delete from user_order_refund where id = #{id}
	</delete>
	
	<delete id="deleteOrderRefund"  parameterType="Long">
		delete from user_order_refund where id = #{id}
	</delete>
	
	<update id="updateOrderRefund" parameterType="orderRefundPojo">
		update user_order_refund set
		<if test="updateBy != null">
			update_by = #{updateBy},
		</if>
		<if test="orderId != null">
			order_id = #{orderId},
		</if>
		<if test="userId != null">
			user_id = #{userId},
		</if>
		<if test="loginname != null and loginname != '' ">
			loginname = #{loginname},
		</if>
		<if test="shopId != null">
			shop_id =#{shopId},
		</if>
		<if test="productId != null">
			product_id =#{productId},
		</if>
		<if test="productName != null and productName != '' ">
			product_name =#{productName},
		</if>
		<if test="productModel != null and productModel != '' ">
			product_model =#{productModel},
		</if>
		<if test="stockId != null">
			stock_id =#{stockId},
		</if>
		<if test="stockPriceOld != null and stockPriceOld != '' ">
			stock_price_old =#{stockPriceOld},
		</if>
		<if test="stockPrice != null">
			stock_price =#{stockPrice},
		</if>
		<if test="refundNum != null">
			refund_num =#{refundNum},
		</if>
		<if test="refundReason != null and refundReason != '' ">
			refund_reason =#{refundReason},
		</if>
		<if test="status != null">
			status =#{status},
		</if>
		<if test="logistics != null and logistics != '' ">
			logistics =#{logistics},
		</if>
		<if test="logType != null and logType != '' ">
			logType =#{logType},
		</if>
		<if test="couponPrice != null">
			coupon_price =#{couponPrice},
		</if>
		<if test="phone != null">
			phone =#{phone},
		</if>
		update_date = now()
		where id = #{id}
	</update>
	
	<!-- 审核单条-->
	<update id="checkOrder" parameterType="OrderRefundPojo">
		update user_order_refund set
		status=1
		where
		id = #{id}
	</update>
	
	<select id="orderRefundAllCount" resultType="int" parameterType="java.util.Map">
		select
		count(*)
		from user_order_refund where
		1=1
		<if test="productName!=null and productName!=''">
			and product_name like CONCAT("%",#{productName},"%")
		</if>
		<if test="status!=null  ">
			and status = #{status}
		</if>
		<if test="beginTime != null and endTime != null">
			and create_date between #{beginTime} and #{endTime}
		</if>
		<if test="beginTime == null or endTime == null">
			and to_days(create_date) = to_days(now())
		</if>
	</select>
	
	<select id="orderRefundAllList" resultType="orderRefundPojo"
		parameterType="java.util.Map">

		select t.id as id, 
		t.user_id as userId, 
		t.order_id as orderId, 
		t.loginname as loginname, 
		t.shop_id as shopId ,
		t.product_id as productId, 
		t.product_name as productName,
		t.product_model as productModel,
		t.stock_id as stockId ,
		t.stock_price_old as stockPriceOld,
		t.stock_price as stockPrice,
		t.refund_num as refundNum,
		t.refund_reason as refundReason,
		t.status as status,
		(select name from sys_dict where value=t.status and type = 'status') statusName,
		t.sku_link_id as skuLinkId,
		t.coupon_price as couponPrice
		from user_order_refund as t
		where
		1=1

		<if test="productName!=null and productName!=''">
			and product_name like CONCAT("%",#{productName},"%")
		</if>
		<if test="status!=null  ">
			and status = #{status}
		</if>
		<if test="pageSize != null">
			limit #{pageNo} , #{pageSize}
		</if>
		
	</select>
	<!--根据订单id跟产品id查询相对应的订单退货记录-->
	<select id="getorderRefundDetail" resultType="orderRefundPojo"
		parameterType="OrderRefundPojo">

		select t.id as id, 
			t.user_id as userId, 
			t.order_id as orderId, 
			t.loginname as loginname, 
			t.shop_id as shopId ,
			t.product_id as productId, 
			t.product_name as productName,
			t.product_model as productModel,
			t.stock_id as stockId ,
			t.stock_price_old as stockPriceOld,
			t.stock_price as stockPrice,
			t.refund_num as refundNum,
			t.refund_reason as refundReason,
			t.status as status,
			t.create_date as createDate,
			t.refund_type as refundType,
			t.remarks as remarks,
			t.sku_link_id as skuLinkId,
			t.type as type,
			t.coupon_price as couponPrice,
			t.images as images,
			t.images2 as images2,
			t.images3 as images3,
			t.logistics as logistics,
			t.logType as logType,
			uo.consignee_phone as consigneePhone
		from user_order_refund as t
			left join user_order uo on uo.id = t.order_id
		where
		1=1
		<if test="productId!=null">
			and t.product_id =#{productId}
		</if>
		<if test="orderId!=null">
			and t.order_id =#{orderId}
		</if>
		<if test="detailId != null">
			and t.detail_id =#{detailId}
		</if>
		<if test="userId != null">
			and t.user_id =#{userId}
		</if>
	</select>
	<update id="updateOrderRefundbyDetailId" parameterType="orderRefundPojo">
		update user_order_refund set
		update_date = now(),
		<if test="status!=null and status!=''">
		status=#{status},
		</if>
		logistics =#{logistics},
		logType =#{logType}
		where 1 = 1
		<if test="detailId != null">
			and detail_id = #{detailId} 
		</if>
		<if test="orderId != null">
			and order_id = #{orderId}
		</if>
		<if test="detailId == null and orderId == null">
			and 1 = 0
		</if>
	</update>
	<select id="getNOrefundDetail" resultType="int">
		select count(*) from user_order_detail where order_id=#{orderId} and user_id=#{userId} and re_status=0;
	</select>
	
</mapper>