<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.tzmb2c.web.mapper.UserSpecialCollectMapper">
		
	<select id="getUserSpecialCollectList" resultType="UserSpecialCollectPojo" parameterType="java.util.Map">
		select 
			t.id as id,
			t.user_id as userId,
			t.special_id as specialId,
			t.create_by as createBy,
			t.create_date as createDate,
			t.update_by as updateBy,
			t.update_date as updateDate,
			t.activity_id as activityId,
			s.name as specialName,
			s.banner as banner,
			s.begin_time as beginTime,
			s.end_time as endTime,
			t.remarks as remarks,
			t.version as version
		from user_special_collect t 
		left join special_show s on t.activity_id = s.activity_id
		where 1=1
		<if test="specialName != null and specialName != ''">
			and s.name like concat("%",#{specialName},"%")
		</if>
		<if test="userId != null">
			and t.user_id = #{userId}
		</if>
		<if test="activityId != null">
			and t.activity_id = #{activityId}
		</if>
		order by t.create_date desc
		<if test="pageSize != null">
			limit #{pageNo} , #{pageSize}
		</if>
	</select>
	
		
	<select id="getUserSpecialCollectListCount" resultType="int" parameterType="java.util.Map">
		select
		count(*)
		from user_special_collect t 
		left join special_show s on t.activity_id = s.activity_id
		where 1=1
		<if test="specialName != null and specialName != ''">
			and s.name like concat("%",#{specialName},"%")
		</if>
		<if test="userId != null">
			and t.user_id = #{userId}
		</if>
		<if test="activityId != null">
			and t.activity_id = #{activityId}
		</if>
	</select>
	
	<select id="getUserSpecialCollectById" parameterType="Long" resultType="UserSpecialCollectPojo" >
		select 
			t.id as id,
			t.user_id as userId,
			t.special_id as specialId,
			t.create_by as createBy,
			t.create_date as createDate,
			t.update_by as updateBy,
			t.update_date as updateDate,
			t.activity_id as activityId,
			t.remarks as remarks,
			t.version as version
		from user_special_collect t where t.id = #{id} 
	</select>
	
	<select id="getUserSpecialCollectByUserId" parameterType="java.util.Map" resultType="UserSpecialCollectPojo" >
		select 
			t.id as id,
			t.user_id as userId,
			t.special_id as specialId,
			s.name as specialName,
			s.banner as banner,
			s.begin_time as beginTime,
			s.end_time as endTime,
			t.create_date as createDate,
			t.activity_id as activityId			
		from user_special_collect t left join special_show s on t.activity_id = s.activity_id
		where
		t.user_id = #{userId} 
		group by t.activity_id 
		order by t.create_date desc
		<if test="pageSize != null">
			limit #{pageNo} , #{pageSize}
		</if>
	</select>
	<select id="getUserSpecialCollectBySpecialId" parameterType="UserSpecialCollectPojo" resultType="UserSpecialCollectPojo" >
		select 
			t.id as id,
			t.user_id as userId,
			t.special_id as specialId,
			s.name as specialName,
			s.banner as banner,
			s.begin_time as beginTime,
			s.end_time as endTime,
			t.create_date as createDate,
			t.activity_id as activityId			
		from user_special_collect t left join special_show s on t.activity_id = s.activity_id
		where
		t.user_id = #{userId} 
		and t.activity_id = #{activityId}
	</select>

	<insert id="insertUserSpecialCollect" parameterType="UserSpecialCollectPojo">
		insert into
		user_special_collect(user_id,special_id,activity_id,create_by,create_date,update_by,update_date,remarks,version)
		values(#{userId},#{specialId},#{activityId},#{createBy},now(),#{updateBy},now(),#{remarks},#{version})
	</insert>
	
	<delete id="delUserSpecialCollectById" parameterType="Long">
		delete from user_special_collect where id = #{id}
	</delete>
	
	<delete id="delUserSpecialCollectBySpecialId"  parameterType="java.util.Map">
		delete from user_special_collect where user_id = #{userId} and activity_id = #{activityId}
	</delete>
	
</mapper>